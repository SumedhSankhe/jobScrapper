company <- html_text(html_nodes(html,".company"))
position <- html_text(html_nodes(html,".jobtitle"))
# daysAgo <- html_text(html_nodes(html,".sponsoredGray , .date"))
results <- data.table(company,position,daysAgo)
results <- data.table(sapply(results,function(y){
gsub("\\+","",trimws(gsub("[[:cntrl:]]","",y)))
}))
results <- results[daysAgo != "Sponsored"]
results[,daysAgo := as.numeric(str_extract(daysAgo,"[[:digit:]]+"))]
html <- read_html(paste0(gsub("\"","",link),"&start=",x*10))
if (x == 0) html <- read_html(gsub("\"","",url))
company <- html_text(html_nodes(html,".company"))
position <- html_text(html_nodes(html,".jobtitle"))
# daysAgo <- html_text(html_nodes(html,".sponsoredGray , .date"))
results <- data.table(company,position,daysAgo)
html <- read_html(paste0(gsub("\"","",link),"&start=",x*10))
if (x == 0) html <- read_html(gsub("\"","",url))
company <- html_text(html_nodes(html,".company"))
position <- html_text(html_nodes(html,".jobtitle"))
daysAgo <- html_text(html_nodes(html,".sponsoredGray , .date"))
results <- data.table(company,position,daysAgo)
results
indeed <- function(title = NULL, loc = NULL, expLvl = NULL, type = NULL){
url <- "https://www.indeed.com/jobs"
if (is.null(loc))
stop("Please Enter a valid Location for results")
library(data.table)
library(rvest)
link <- createURL(loc = loc, jobTitle = title, type = type, expLvl = expLvl, site = url)
print(link)
html <- read_html(link)
text <- html_text(html_nodes(html,"#searchCount"))
numbers <- as.numeric(trimws(gsub("\\,","",(gsub("[[:alpha:]]+","",
gsub(".*of ","",text))))))
paiginate <- 10
data <- rbindlist(lapply(paiginate, function(x){
html <- read_html(paste0(gsub("\"","",link),"&start=",x*10))
if (x == 0) html <- read_html(gsub("\"","",url))
company <- html_text(html_nodes(html,".company"))
position <- html_text(html_nodes(html,".jobtitle"))
# daysAgo <- html_text(html_nodes(html,".sponsoredGray , .date"))
results <- data.table(company,position)#,daysAgo)
results <- data.table(sapply(results,function(y){
gsub("\\+","",trimws(gsub("[[:cntrl:]]","",y)))
}))
# results <- results[daysAgo != "Sponsored"]
results[,daysAgo := as.numeric(str_extract(daysAgo,"[[:digit:]]+"))]
print(paste0(x," of ", max(paiginate)))
if (x %% 2 == 1) Sys.sleep(0.2)
results
}))
}
x <- indeed(title = "Data Scientist", loc = "Boston, MA")
indeed <- function(title = NULL, loc = NULL, expLvl = NULL, type = NULL){
url <- "https://www.indeed.com/jobs"
if (is.null(loc))
stop("Please Enter a valid Location for results")
library(data.table)
library(rvest)
link <- createURL(loc = loc, jobTitle = title, type = type, expLvl = expLvl, site = url)
print(link)
html <- read_html(link)
text <- html_text(html_nodes(html,"#searchCount"))
numbers <- as.numeric(trimws(gsub("\\,","",(gsub("[[:alpha:]]+","",
gsub(".*of ","",text))))))
paiginate <- 10
data <- rbindlist(lapply(paiginate, function(x){
html <- read_html(paste0(gsub("\"","",link),"&start=",x*10))
if (x == 0) html <- read_html(gsub("\"","",url))
company <- html_text(html_nodes(html,".company"))
position <- html_text(html_nodes(html,".jobtitle"))
# daysAgo <- html_text(html_nodes(html,".sponsoredGray , .date"))
results <- data.table(company,position)#,daysAgo)
results <- data.table(sapply(results,function(y){
gsub("\\+","",trimws(gsub("[[:cntrl:]]","",y)))
}))
# results <- results[daysAgo != "Sponsored"]
results[,daysAgo := as.numeric(stringr::str_extract(daysAgo,"[[:digit:]]+"))]
print(paste0(x," of ", max(paiginate)))
if (x %% 2 == 1) Sys.sleep(0.2)
results
}))
}
x <- indeed(title = "Data Scientist", loc = "Boston, MA")
View(x)
indeed <- function(title = NULL, loc = NULL, expLvl = NULL, type = NULL){
url <- "https://www.indeed.com/jobs"
if (is.null(loc))
stop("Please Enter a valid Location for results")
library(data.table)
library(rvest)
link <- createURL(loc = loc, jobTitle = title, type = type, expLvl = expLvl, site = url)
print(link)
html <- read_html(link)
text <- html_text(html_nodes(html,"#searchCount"))
numbers <- as.numeric(trimws(gsub("\\,","",(gsub("[[:alpha:]]+","",
gsub(".*of ","",text))))))
paiginate <- 10
data <- rbindlist(lapply(paiginate, function(x){
html <- read_html(paste0(gsub("\"","",link),"&start=",x*10))
if (x == 0) html <- read_html(gsub("\"","",url))
company <- html_text(html_nodes(html,".company"))
position <- html_text(html_nodes(html,".jobtitle"))
# daysAgo <- html_text(html_nodes(html,".sponsoredGray , .date"))
results <- data.table(company,position)#,daysAgo)
results <- data.table(sapply(results,function(y){
gsub("\\+","",trimws(gsub("[[:cntrl:]]","",y)))
}))
# results <- results[daysAgo != "Sponsored"]
# results[,daysAgo := as.numeric(stringr::str_extract(daysAgo,"[[:digit:]]+"))]
print(paste0(x," of ", max(paiginate)))
if (x %% 2 == 1) Sys.sleep(0.2)
results
}))
}
x <- indeed(title = "Data Scientist", loc = "Boston, MA")
View(x)
html <- read_html(paste0(gsub("\"","",link),"&start=",x*10))
if (x == 0) html <- read_html(gsub("\"","",url))
x=1
html <- read_html(paste0(gsub("\"","",link),"&start=",x*10))
if (x == 0) html <- read_html(gsub("\"","",url))
company <- html_text(html_nodes(html,".company"))
position <- html_text(html_nodes(html,".jobtitle"))
company
position <- html_text(html_nodes(html,".jobtitle"))
position
daysAgo <- html_text(html_nodes(html,".sponsoredGray , .date"))
daysAgo
data.table(company,position,daysAgo)
results <- data.table(company,position)
results
company <- html_text(html_nodes(html,".company"))
position <- html_text(html_nodes(html,".jobtitle"))
company
position
daysAgo <- html_text(html_nodes(html,".sponsoredGray , .date"))
ata.table(company,position)
ata.table(company,position)
data.table(company,position)
results <- data.table(company,position)
results <- cbind(results, daysAgo)
results
paste0(gsub("\"","",link),"&start=",x*10
)
daysAgo
results <- data.table(sapply(results,function(y){
gsub("\\+","",trimws(gsub("[[:cntrl:]]","",y)))
}))
results
daysAgo <- html_text(html_nodes(html,".date"))
daysAgo
daysAgo <- html_text(html_nodes(html,".sjCapt"))
daysAgo
daysAgo <- html_text(html_nodes(html,".clickcard"))
daysAgo
daysAgo
position <- html_text(html_nodes(html,".jobtitle"))
daysAgo <- html_text(html_nodes(html,".clickcard"))
daysAgo
daysAgo <- html_text(html_nodes(html,".summary"))
daysAgo
x
link
position <- html_text(html_nodes(html,".clickcard~ .clickcard+ .clickcard .jobtitle"))
position
position <- html_text(html_nodes(html,".jobtitle"))
position
?html_nodes
html_nodes(html,list(".company",".jobtitle"))
html_nodes(html,c(".company",".jobtitle"))
html_nodes(html,c(".company &.jobtitle"))
html_nodes(html,c(".company & .jobtitle"))
html_nodes(html,c(".company | .jobtitle"))
html_nodes(html,c(".company .jobtitle"))
html_nodes(html,".company .jobtitle")
numbers
numbers/14
numbers/10
round(numbers/10)
indeed <- function(title = NULL, loc = NULL, expLvl = NULL, type = NULL){
url <- "https://www.indeed.com/jobs"
if (is.null(loc))
stop("Please Enter a valid Location for results")
library(data.table)
library(rvest)
link <- createURL(loc = loc, jobTitle = title, type = type, expLvl = expLvl, site = url)
print(link)
html <- read_html(link)
text <- html_text(html_nodes(html,"#searchCount"))
numbers <- as.numeric(trimws(gsub("\\,","",(gsub("[[:alpha:]]+","",
gsub(".*of ","",text))))))
paiginate <- ronund(numbers/10)
data <- rbindlist(lapply(paiginate, function(x){
tryCatch({html <- read_html(paste0(gsub("\"","",link),"&start=",x*10))
if (x == 0) html <- read_html(gsub("\"","",url))
company <- html_text(html_nodes(html,".company"))
position <- html_text(html_nodes(html,".jobtitle"))
daysAgo <- html_text(html_nodes(html,".summary"))
results <- data.table(company,position)
results <- cbind(results, daysAgo)
results <- data.table(sapply(results,function(y){
gsub("\\+","",trimws(gsub("[[:cntrl:]]","",y)))
}))
}, err = function(err){
cat(conditionMessage(err))
}
)
# results <- results[daysAgo != "Sponsored"]
# results[,daysAgo := as.numeric(stringr::str_extract(daysAgo,"[[:digit:]]+"))]
print(paste0(x," of ", max(paiginate)))
if (x %% 2 == 1) Sys.sleep(0.2)
results
}))
}
x <- indeed(title = "Data Scientist", loc = "Boston, MA")
paiginate <- round(numbers/10)
indeed <- function(title = NULL, loc = NULL, expLvl = NULL, type = NULL){
url <- "https://www.indeed.com/jobs"
if (is.null(loc))
stop("Please Enter a valid Location for results")
library(data.table)
library(rvest)
link <- createURL(loc = loc, jobTitle = title, type = type, expLvl = expLvl, site = url)
print(link)
html <- read_html(link)
text <- html_text(html_nodes(html,"#searchCount"))
numbers <- as.numeric(trimws(gsub("\\,","",(gsub("[[:alpha:]]+","",
gsub(".*of ","",text))))))
paiginate <- round(numbers/10)
data <- rbindlist(lapply(paiginate, function(x){
tryCatch({html <- read_html(paste0(gsub("\"","",link),"&start=",x*10))
if (x == 0) html <- read_html(gsub("\"","",url))
company <- html_text(html_nodes(html,".company"))
position <- html_text(html_nodes(html,".jobtitle"))
daysAgo <- html_text(html_nodes(html,".summary"))
results <- data.table(company,position)
results <- cbind(results, daysAgo)
results <- data.table(sapply(results,function(y){
gsub("\\+","",trimws(gsub("[[:cntrl:]]","",y)))
}))
}, err = function(err){
cat(conditionMessage(err))
}
)
# results <- results[daysAgo != "Sponsored"]
# results[,daysAgo := as.numeric(stringr::str_extract(daysAgo,"[[:digit:]]+"))]
print(paste0(x," of ", max(paiginate)))
if (x %% 2 == 1) Sys.sleep(0.2)
results
}))
}
x <- indeed(title = "Data Scientist", loc = "Boston, MA")
x
indeed <- function(title = NULL, loc = NULL, expLvl = NULL, type = NULL){
url <- "https://www.indeed.com/jobs"
if (is.null(loc))
stop("Please Enter a valid Location for results")
library(data.table)
library(rvest)
link <- createURL(loc = loc, jobTitle = title, type = type, expLvl = expLvl, site = url)
print(link)
html <- read_html(link)
text <- html_text(html_nodes(html,"#searchCount"))
numbers <- as.numeric(trimws(gsub("\\,","",(gsub("[[:alpha:]]+","",
gsub(".*of ","",text))))))
paiginate <- round(numbers/10)
data <- rbindlist(lapply(seq(1,paiginate,1), function(x){
tryCatch({html <- read_html(paste0(gsub("\"","",link),"&start=",x*10))
if (x == 0) html <- read_html(gsub("\"","",url))
company <- html_text(html_nodes(html,".company"))
position <- html_text(html_nodes(html,".jobtitle"))
daysAgo <- html_text(html_nodes(html,".summary"))
results <- data.table(company,position)
results <- cbind(results, daysAgo)
results <- data.table(sapply(results,function(y){
gsub("\\+","",trimws(gsub("[[:cntrl:]]","",y)))
}))
}, err = function(err){
cat(conditionMessage(err))
}
)
# results <- results[daysAgo != "Sponsored"]
# results[,daysAgo := as.numeric(stringr::str_extract(daysAgo,"[[:digit:]]+"))]
print(paste0(x," of ", max(paiginate)))
if (x %% 2 == 1) Sys.sleep(0.2)
results
}))
}
x <- indeed(title = "Data Scientist", loc = "Boston, MA")
View(x)
x[,.N,company]
x[,.N,position]
install.packages("wordcloud")
wordcloud::wordcloud(x[,.N,position][,position],x[,.N,position][,N])
x <- 1
y <- 1
indeed <- function(title = NULL, loc = NULL, expLvl = NULL, type = NULL){
url <- "https://www.indeed.com/jobs"
if (is.null(loc))
stop("Please Enter a valid Location for results")
library(data.table)
library(rvest)
link <- createURL(loc = loc, jobTitle = title, type = type, expLvl = expLvl, site = url)
print(link)
html <- read_html(link)
text <- html_text(html_nodes(html,"#searchCount"))
numbers <- as.numeric(trimws(gsub("\\,","",(gsub("[[:alpha:]]+","",
gsub(".*of ","",text))))))
paiginate <- round(numbers/10)
data <- rbindlist(lapply(seq(1,paiginate,1), function(x){
tryCatch({html <- read_html(paste0(gsub("\"","",link),"&start=",x*10))
if (x == 0) html <- read_html(gsub("\"","",url))
company <- html_text(html_nodes(html,".company"))
position <- html_text(html_nodes(html,".jobtitle"))
daysAgo <- html_text(html_nodes(html,".summary"))
results <- data.table(company,position)
results <- cbind(results, daysAgo)
results <- data.table(sapply(results,function(y){
gsub("\\+","",trimws(gsub("[[:cntrl:]]","",y)))
}))
}, err = function(err){
cat(conditionMessage(err))
}
)
# results <- results[daysAgo != "Sponsored"]
# results[,daysAgo := as.numeric(stringr::str_extract(daysAgo,"[[:digit:]]+"))]
print(paste0(x," of ", max(paiginate)))
if (x %% 2 == 1) Sys.sleep(0.2)
results
}))
}
createURL <- function(loc = NULL, jobTitle = NULL, type = NULL, expLvl = NULL, site = NULL){
if (is.null(site)) stop("Site url Missing")
if (is.null(loc)) stop("Location for Search Missing")
if (is.null(jobTitle)) cat("Job Title Missing")
location <- NULL
if (grepl("indeed", site, ignore.case = T)) {
if (grepl("\\,", loc)) location <- paste0(gsub(",.*", "", loc), "%2C+",
gsub(".*,", "", loc))
if (grepl(" ", loc)) location <- gsub(" ", "+", loc)
if (is.null(location)) location <- loc
location <- paste0("&l=", location)
if (grepl(" ", jobTitle)) job <- gsub(" ", "+", jobTitle) else job <- jobTitle
job <- paste0("?q=", job)
}
# if (grepl("monster",row$websiteList, ignore.case = T)){
#   if (grepl(" ",loc)) location <- gsub(" ","-",loc)
#   if (grepl("\\,",loc)) location <- gsub(",","__2C",loc)
#   if (grepl("\\, ",loc)) location <- gsub(", ","__2C-",loc)
#
#   location <- paste0("&where=",location,"&intcid=skr_navigation_nhpso_searchMain")
#
#   if(grepl(" ",jobTitle)) job <- gsub(" ","-",jobTitle) else job <- jobTitle
#   job <- paste0("?q=",job)
# }
link <- paste0(site,job,location)
link
}
createURL("Boston, MA","Data Scientist")
createURL("Boston, MA","Data Scientist","https://www.indeed.com/jobs")
createURL("Boston, MA","Data Scientist",site = "https://www.indeed.com/jobs")
link <- createURL("Boston, MA","Data Scientist",site = "https://www.indeed.com/jobs")
x = 1
html <- read_html(paste0(gsub("\"","",link),"&start=",x*10))
library(data.table)
library(rvest)
html <- read_html(paste0(gsub("\"","",link),"&start=",x*10))
read_html(gsub("\"","",url))
company <- html_text(html_nodes(html,".company"))
position <- html_text(html_nodes(html,".jobtitle"))
company
position
daysAgo <- html_text(html_nodes(html,"#resultsCol :nth-child(1)"))
daysAgo
class(daysAgo)
sapply(daysAgo, length)
x <- data.table(daysAgo)
View(x)
rm(daysAgo)
rm(x)
daysAgo <- html_text(html_nodes(html,".clickcard :nth-child(1)"))
daysAgo <- html_text(html_nodes(html,"//*[contains(concat( " ", @class, " " ), concat( " ", "clickcard", " " ))]//*[(((count(preceding-sibling::*) + 1) = 1) and parent::*)]"))
daysAgo <- html_text(html_nodes(html,//*[contains(concat( " ", @class, " " ), concat( " ", "clickcard", " " ))]//*[(((count(preceding-sibling::*) + 1) = 1) and parent::*)]))
daysAgo <- html_text(html_nodes(html,".sponsoredGray , .date , .jobtitle"))
daysAgo
daysAgo <- html_text(html_nodes(html,".date , .sponsoredGray , .company a , .jobtitle"))
rm(company,position)
daysAgo
trimws(gsub("[[:cntrl:]]","",daysAgo))
rm(daysAgo)
# company <- html_text(html_nodes(html,".company"))
# position <- html_text(html_nodes(html,".jobtitle"))
data <- html_text(html_nodes(html,".date , .sponsoredGray , .company a , .jobtitle"))
cleanData <- trimws(gsub("[[:cntrl:]]","",data))
cleanData
lapply(cleanData, print)
lapply(cleanData, function(x){
print(x)
})
sapply(cleanData, function(x){
print(x)
})
cleanData
length(cleanData)
?grepl
grepl("sponsored",cleanData[2],ignore.case = T)
x <- 2
x
grepl("[[:digit:]]",cleanData[x+1])
if(grepl("[[:digit:]]",cleanData[x+1])) paste0(cleanData[x-1],
cleanData[x],
cleanData[x+1], collapse = ",")
?paste0
paste0(cleanData[x-1],
cleanData[x],
cleanData[x+1], collapse = " ")
paste0(cleanData[x-1],
cleanData[x],
cleanData[x+1], collapse = "\n")
paste0(cleanData[x-1],
cleanData[x],
cleanData[x+1], sep = "\n")
cat(cleanData[x-1],
cleanData[x],
cleanData[x+1], sep = "\n")
cat(cleanData[x-1],
cleanData[x],
cleanData[x+1], sep = ",")
cat(cleanData[x-1],
cleanData[x],
cleanData[x+1], sep = ", ")
paste(cleanData[x-1], cleanData[x], cleanData[x+1], sep = ", ")
paste0(cleanData[x-1], cleanData[x], cleanData[x+1], sep = ", ")
paste0(cleanData[x-1], cleanData[x], cleanData[x+1], collapse = ", ")
paste(cleanData[x-1], cleanData[x], cleanData[x+1], collapse = ", ")
paste(cleanData[x-1], cleanData[x], cleanData[x+1], collapse = " ")
cleanData
d <- lapply(1:length(cleanData), function(x){
if (grepl("sponsored",cleanData[x],ignore.case = T)) {
if (grepl("[[:digit:]]",cleanData[x + 1])) {
paste(cleanData[x - 1], cleanData[x], cleanData[x + 1], collapse = " ")
}
}else if (grepl("[[:digit:]]",cleanData[x]) &
grepl("sponsored",cleanData[x-1], ignore.case = T)) {
paste(cleanData[x - 1], cleanData[x], collapse = " ")
}
})
grep("sponsored",cleanData)
grep("sponsored",cleanData,ignore.case = T)
)
spn <- grep("sponsored",cleanData,ignore.case = T)
spn
t(spn)
t(t(spn))
cbind(t(t(spn)),t(t(spn-1)))
cbind(t(t(spn)),t(t(spn-1)),t(t(spn+1)))
cleanData[-spn]
cleanData
# company <- html_text(html_nodes(html,".company"))
# position <- html_text(html_nodes(html,".jobtitle"))
data <- html_text(html_nodes(html,".date , .sponsoredGray , .company a , .jobtitle"))
cleanData <- trimws(gsub("[[:cntrl:]]","",data))
cleanData
grep("[[:digit:]]",cleanData)
grep("[[:digit:]]",cleanData)
cleanData[
number <- grep("[[:digit:]]",cleanData)
cleanData <- trimws(gsub("[[:cntrl:]]","",data))
spn <- grep("sponsored",cleanData,ignore.case = T)
number <- grep("[[:digit:]]",cleanData)
cleanData[-c(spn,number)]
# company <- html_text(html_nodes(html,".company"))
# position <- html_text(html_nodes(html,".jobtitle"))
data <- html_text(html_nodes(html,".date , .sponsoredGray , .company, .jobtitle"))
cleanData <- trimws(gsub("[[:cntrl:]]","",data))
cleanData
spn <- grep("sponsored",cleanData,ignore.case = T)
number <- grep("[[:digit:]]",cleanData)
cleanData[-c(spn,number)]
cleanData
# company <- html_text(html_nodes(html,".company"))
position <- html_text(html_nodes(html,".sponsoredGray"))
position
link
# company <- html_text(html_nodes(html,".company"))
position <- html_text(html_nodes(html,".sponsoredJob"))
position
# company <- html_text(html_nodes(html,".company"))
position <- html_text(html_nodes(html,".sJ"))
position
# company <- html_text(html_nodes(html,".company"))
position <- html_text(html_nodes(html,"#sJ"))
position
# company <- html_text(html_nodes(html,".company"))
position <- html_text(html_nodes(html,".sjCapt .date , #sja5 , #sja4 , #sja3 , #sja1 , #sja2 , .sponsoredGray"))
position
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at
#    https://github.com/settings/developers. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "56b637a5baffac62cad9",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
?oauth_app
